<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security.xsd">

  <http auto-config="true">
    <!-- Kiem soat quyen truoc khi thuc hien request -->
    <intercept-url pattern="/" access="permitAll" />
    <intercept-url pattern="/login" access="isAnonymous()" />
    <intercept-url pattern="/logout" access="isAuthenticated()" />
    <intercept-url pattern="/registrations" access="isAnonymous()" />
    <intercept-url pattern="/registrations/**" access="isAnonymous()" />
    <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
    <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />

    <!-- access denied page -->
    <access-denied-handler error-page="/403" />

    <!-- Custom follow login, logout -->
    <form-login login-page="/login" username-parameter="email" password-parameter="password"
      authentication-failure-handler-ref="customizeRedirectFailedHandler"
      authentication-success-handler-ref="customizeRedirectSuccessHandler" />
    <remember-me token-validity-seconds="2592000" remember-me-parameter="remember" />
    <logout logout-url="/logout" delete-cookies="JSESSIONID" success-handler-ref="customLogoutSuccessHandler" />

    <!-- CSRF -->
    <csrf disabled="false" />
  </http>

  <beans:bean id="customizeRedirectSuccessHandler" class="com.framgia.security.CustomUrlAuthenticationSuccessHandler" />
  <beans:bean id="customizeRedirectFailedHandler" class="com.framgia.security.CustomUrlAuthenticationFailedHandler" />
  <beans:bean id="customLogoutSuccessHandler" class="com.framgia.security.CustomLogoutSuccessHandler" />
  <beans:bean id="userDetailsService" class="com.framgia.security.CustomUserDetailsService" />
  <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

  <!-- Custom object user -->
  <authentication-manager>
    <authentication-provider user-service-ref="userDetailsService">
      <password-encoder ref="encoder"></password-encoder>
    </authentication-provider>
  </authentication-manager>
</beans:beans>
