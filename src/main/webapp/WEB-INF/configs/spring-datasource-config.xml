<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
	    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

  <tx:annotation-driven proxy-target-class="true"
    transaction-manager="transactionManager" />
    
  <!-- Load database's config. Example: url, username, password -->
  <context:property-placeholder
    location="classpath:spring-server-config.properties" />

  <bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${jdbc.driverClassName}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.userName}" />
    <property name="password" value="${jdbc.password}" />
  </bean>

  <!-- Hibernate session factory -->
  <bean id="sessionFactory"
    class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />

    <!-- Set hibernate's properties -->
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${jdbc.hibernateDialect}</prop>
        <prop key="hibernate.c3p0.min_size">1</prop>
        <prop key="hibernate.c3p0.max_size">150</prop>
        <prop key="hibernate.c3p0.max_statements">300</prop>
        <prop key="hibernate.c3p0.timeout">1800</prop>
        <prop key="hibernate.show_sql">${jdbc.showSql}</prop>
        <prop key="hbm2ddl.auto">create</prop>
      </props>
    </property>

    <!-- Load mapping of model and table -->
    <property name="mappingResources">
      <list>
        <value>com/framgia/model/hbm/Cart.hbm.xml</value>
        <value>com/framgia/model/hbm/Category.hbm.xml</value>
        <value>com/framgia/model/hbm/Comment.hbm.xml</value>
        <value>com/framgia/model/hbm/Image.hbm.xml</value>
        <value>com/framgia/model/hbm/Order.hbm.xml</value>
        <value>com/framgia/model/hbm/OrderProduct.hbm.xml</value>
        <value>com/framgia/model/hbm/Product.hbm.xml</value>
        <value>com/framgia/model/hbm/Profile.hbm.xml</value>
        <value>com/framgia/model/hbm/Promotion.hbm.xml</value>
        <value>com/framgia/model/hbm/Recent.hbm.xml</value>
        <value>com/framgia/model/hbm/User.hbm.xml</value>
      </list>
    </property>
  </bean>

  <!-- Transaction manager for a single Hibernate SessionFactory -->
  <bean id="transactionManager"
    class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- Define scope transaction -->
  <bean id="transactionProxyTemplate" abstract="true"
    class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
    <property name="transactionManager" ref="transactionManager" />

    <!-- Define methods which use transaction. If property is PROPAGATION_REQUIRED, 
      when access db, MUST use transaction -->
    <property name="transactionAttributes">
      <props>
        <prop key="create*">PROPAGATION_REQUIRED</prop>
        <prop key="save*">PROPAGATION_REQUIRED</prop>
        <prop key="remove*">PROPAGATION_REQUIRED</prop>
        <prop key="*">PROPAGATION_SUPPORTS</prop>
      </props>
    </property>
  </bean>
</beans>
